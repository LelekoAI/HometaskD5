 # устанавливаем венв
 python -m venv venv
 # активируем венв
 venv\scripts\activate
 # создаём файлик с версиями либ
 pip freeze > requierments.txt
 # смотрим зависимости
 pip list
 # деинсталируем джанго
 #pip uninstall django
 # создать проект в джанго
 django-admin startproject FirstDjangoProject
 # перемещаемся в дирректорию проекта
 cd DjangoProject
 # смотри файлы
 ls
 # запускаем проект
 python manage.py runserver
 # установка джанго
 python -m pip install Django
 # настройка бд, миграции
 python manage.py migrate
 # создаем администратора (admin admin /admin)
 python manage.py createsuperuser
 # создаем приложение
 python manage.py startapp mc_donalds
 # для того чтобы соотнести бд и nodels
 python manage.py makemigrations
 # создание django shell
 python manage.py shell

 Эти модели должны также реализовать методы:

Методы like() и dislike() в моделях Comment и Post, которые увеличивают/уменьшают рейтинг на единицу.

Метод preview() модели Post, который возвращает начало статьи (предварительный просмотр) длиной 124 символа и добавляет многоточие в конце.

Метод update_rating() модели Author, который обновляет рейтинг текущего автора (метод принимает в качестве аргумента только self).
Он состоит из следующего:
суммарный рейтинг каждой статьи автора умножается на 3;
суммарный рейтинг всех комментариев автора;
суммарный рейтинг всех комментариев к статьям автора.

Создать двух пользователей (с помощью метода User.objects.create_user('username')).
Создать два объекта модели Author, связанные с пользователями.
Добавить 4 категории в модель Category.
Добавить 2 статьи и 1 новость.
Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).
Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).
Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.
Обновить рейтинги пользователей.
Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).
Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.
Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.